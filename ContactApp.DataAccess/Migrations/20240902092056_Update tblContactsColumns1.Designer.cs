// <auto-generated />
using System;
using ContactApp.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240902092056_Update tblContactsColumns1")]
    partial class UpdatetblContactsColumns1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactApp.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("company_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_facebook_page")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_founded_at")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_funding_range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_linkedin_page")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_location_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_naics_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_phone_numbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_profile_image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_sic_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_size_key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_twitter_page")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("decision_making_power")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ebitda_range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email_score")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lead_divison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lead_location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lead_titles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkedin_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("past_companies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("revenue_range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seniority_level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("work_phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblContacts");
                });

            modelBuilder.Entity("ContactApp.Models.SearchLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SearchBy")
                        .HasColumnType("int");

                    b.Property<int>("SearchLimitCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("SearchLimitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSearchlimit");
                });

            modelBuilder.Entity("ContactApp.Models.UserExport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExportBy")
                        .HasColumnType("int");

                    b.Property<int>("ExportCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExportDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblUserExport");
                });

            modelBuilder.Entity("ContactApp.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExportTodayLimit")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerExportLimit")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("searchlimit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
